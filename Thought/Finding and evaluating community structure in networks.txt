1.社团发现算法改进的思考：简洁的方法、优美

常规算法的共有步骤：迭代和更新计算


《Finding and evaluating community structure in networks》
首先，社团发现有意义的原因是大多数网络数据有一个共性：
本身具有内部联系紧密而外部联系稀疏的特点

类似的课题：图理论中的图分割（参考矩阵）、 社会学中的分级群聚

图分割算法：应用在分布式，负载均衡   分配任务：在相同机器上分配尽可能内部联系更多的任务，
而不同机器上的任务的联系应尽可能少——NP完全问题
算法：Kernighan-Lin algorithm [20]——1970 有点早了  O(n3)对稀疏图

通过一棵树可以清晰地看出自上而下和自下而上的聚类，且划分不同高度可以得到不同程度的聚类社团

[21]-[23]:演员的聚类应用，通过共同参演一部戏表示两个演员之间的相似性，参演越多相同的戏则演员
彼此相似性越高，以彼此之间的相似性这一属性来进行聚合聚类。
（和网络拓扑的区别：节点的相似性多了一个辅助值：共同参演戏剧的数量，而网络拓扑本身没有这个属性
，可否创造出类似的属性？ 两个节点连接的共同节点越多，是否可说相似性越高？（有人做过吗？））
[24]早期聚合聚类——1975  （现在新的聚类如机器学习中的k-means或其他方法能用于社团发现中吗？）
聚合聚类方法的缺陷：
1）对不同数据有一定不准确率（比如呢？）
2）总是先发现核心节点，相似性很大的节点会先发现出来，而边缘节点可能会被忽略或放置在错误的区域
——  （这个是不是反而可以借鉴用来找重要节点，只显示重要节点布局？）

分裂的方式：
通过找最不相似的节点，来删除他们之间的边 （那么是否可以用文中提到的相似属性来进行聚合聚类？）
点 （点的属性不好找，就通过边的属性来提，我的文章是否可以着重点从拓扑布局中的点延伸到对边的处理？）
边的between属性

3种betweenness:
其中电流类比的betweenness是什么意思？为什么和随机betweenness是一个道理？

选取哪一种betweenness计算方式的效果类似？ （文中所说，选择哪一个不是重点） 但是为什么类似？具体哪
个好？
每删除一条边需要重新计算betweenness，因为删除后的网络结构产生了变化，主要是针对这个问题：
如果仅计算一次betweenness，有可能两个社团间仅有两条边相连，但其中一条边betweenness相当大，而另
一条边就相对小，如果仅计算一次，那么这第二条边可能很晚才删除，这有可能导致巨大的社团发现错误，
但每一次删除重复计算则可以避免。 （未给出理论证明，只是应用阐述）
因为每一次都会重复计算的步骤是最重要的，所以选择哪一个betweenness相对没那么重要，这也是之前的
分裂算法所没有的步骤 （这就是别人的创新点）

节点的betweenness[27]——这才是betweenness的初创，不过是针对节点的 （节点的该属性其实可以决定其
重要性？是否在重要性提取的过程中可使用这个概念？）

具体的计算：
betweenness：使用bf算法计算最短路？[28,29] O(m)       O(n2)的点集对
综合下来：O(mn2)
新的方法：[30],[31]   O(mn)复杂度计算betweenness
以每个点为基准，通过bfs计算其到其他每个点的最短路径，建立一棵树，记录边的路径得分 （问题在于
不一定每个点对间只有一条最短路，可能有多条长度相同的，此时该采用什么策略——权重） （考虑周全）

当有些边没有位于最短路径上时，此时其betweenness该记为什么？
（挺巧妙的，其实边的betweenness越大，证明其越重要，那么删除掉它就可能引起不联通，所以更容易得到
社团！！！） （感觉这里其实的原理就是图论中的连通度相关问题了，开始变为纯数学讨论了，这也许是
为什么很多师兄对于社团发现采用的是标签算法的改进，因为这里的理论则变成了图论相关的改进了，可能与
计算机实际实现没有太大联系了）

page6第一段：重新计算betweenness时不需要计算所有的，只需要计算删除该边后相同影响单元内的，哪些
属于相同单元的？？？

公式（5）上面 eij = ai*aj? 这是针对什么网络？ in a network in which edges fall between vertices 
without regard for the communities they belong to ?
Q的公式是怎么变换出来的？ 通过一个实例验证确实（5）是成立的，但是真完全成立吗？

Q = Tr(e) - |e2| 怎么公式转换的？   其物理含义怎么理解？ |e2|代表随机连接？什么意思？
Q一般最大值达不到1，且规避了之前Q = Tr(e)时针对一个完整大网络的Max = 1值得恒定性问题，一般在
0.3-0.7

通过Q去判断迭代过程中出现的不同层次上的社团的好坏，选择一个最优的  （局部最优？）

总结：
缺点：复杂度太高 O(n3) 
适用于稀疏图 10000个点以下的网络 （那么我的数据也不算是真正大型复杂数据了？）

改进方法探索：1.分布式
2.找一些优化降低复杂度





