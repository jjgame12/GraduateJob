中心思想：
把各种基本算法理解清楚，不要模棱两可，无论理论or代码实现！！！！！！


为查找到的论文：
An Efficient Large Graph Clustering Technique based on Min-Hash

问题：
聚集程度？ 最短距离？  衡量小世界网络的特性，能否通过这两个属性来重新划分最优社团模块？？



目前数据挖掘中用到的聚类方法：
1.划分方法：要给出将要划分的区域数量，如k-means
2.层次方法：聚合和分裂
3.基于密度
4.基于网格：优点是处理速度快

节点聚类：通过相似性去初始化一个标签，表明更有可能在一个社团中 （怎么去构造这样一个相似性的属性？）
且这个属性的计算不能太复杂，且最好能通过初始的邻接矩阵等能得到 （两个节点共同连接的其他节点数）

节点搜索：通过重要性去查找出这样的关键节点，可能构造出哪种属性？ （节点的betweenness?）

标签算法改进：
1.初始化 （是否可以先统计一下所有节点间的共有节点，利用两个节点连接的共同节点的数量得到一个评分，
通过评分决定标签是否初始化为一个相同的值） （参考《社会网络中社团发现算法研究》中第三章的初始化，
改进其方法？）
2.更新过程
3.终止迭代条件

对算法理论的测试一般都是用少量数据点进行细致的结果对比分析，因为节点少便于观察细节效果，理论分析
得出优劣。 （但是我的其实是针对实际数据进行的软件实现，对算法的测试验证能否用实际大数据的效果
和时间对不同方法来进行验证对比分析？用我的大数据从时间效率和效果上进行对以往算法的改进和优势谈
论可以吗？ 而不借助于小数据进行优点分析？  从实际应用的角度出发谈优势？）

k-means算法的思考：
是否可以将边映射为节点之间的距离，通过求节点之间的最小距离来使用k-means进行聚类，但是这样做有意义吗？社团应该是内部联系紧密而外部
联系稀疏，那么距离越近会有明显的社团关系吗？，具有小世界特性的网络使用k-means的效果？
小世界特性的随机网络怎么生成呢？

考虑针对实际问题提出具体算法：
问题：如何从大堆具有地理信息的网络节点中进行既考虑物理又考虑逻辑的可视化？
解决：聚类成社团化，然后找到每个社团中的核心节点，对这些节点进行地理位置的赋予，再根据其位置划分范围，进行内部局部布局。
所以社团发现外加核心节点发现融入到一个算法中能算是改进吗？
考虑在发现社团的同时完成对重要点的搜索，然后得到答案。
算是新问题老方法的应用吗？可以算是一个老方法新问题应用的点吗？

另外，考虑尝试k-means从点的betweenness角度聚类或者从边的什么归类属性或点的距离等等进行聚类尝试

考虑将拓扑聚类问题看成一个数学问题，即图问题，通过数学的领域看能否有所创新和思路方法，从图论的角度，邻接矩阵或者纯图的角度，深度优先
遍历等看有没有方法？

社团发现可以用机器学习的方法吗？如监督或半监督？ 去训练？ 或者训练的首要就是找出社团？ 先后关系是什么？

目前还未看的一些其他方向聚类：谱密度、 遗传（最优化）、 随机游走等等 （？？待更新？？）


12.1:
1) 查询近期论文，看目前的社团发现算法一般用什么算法，有没有更全新的算法？
2）看一下目前的算法是如何针对已知算法进行改进的，学习思路
3）针对自己改进的方向，关注一下目前的中文算法中有没有类似改进的，注意查重。
4）试着将图割的概念和betweenness和Modularity等概念用在标签传播算法中更新过程，看能否有所改进。
5）试着将找重要点赋为节点标签初始化的过程，比如重要点周围的点标签赋为一个统一值，看能否在时间或效果上有所改进。
6）将地理位置约束这一条件加入社团发现，从需求改进来更新算法，加入地理位置约束的社团发现有哪些限制条件，有什么可以对社团发现进行改进的，针对约束需求？
7）已知算法的各自缺陷是什么？找到各自缺陷，针对需求缺点进行方法改进？
各自算法不适合什么？适合什么？怎么去改进以变得适合？
8）层次聚类是一个什么思想
9）能否将k-means的思想借鉴过来作为某一个方法？

12.2:
1）基于布局的聚类算法，基于力导引的聚类？    （？？先布局，再通过距离orK-means找出相聚的社团？？这样就失去了先聚类再对社团内部布局简化的意义啊）
